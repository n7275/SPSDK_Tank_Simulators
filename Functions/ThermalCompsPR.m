function ThermalCompsPR(dt)  global mass;  global MAX_SUB;  global SPECIFICC_GAS;  global SPECIFICC_LIQ;  global MMASS;  global L_DENSITY;  global BULK_MOD;  global VAPPRESS;  global VAPGRAD;  global R_CONST;  global total_mass;  global vapor_mass;  global Q;  global Temp;  global Volume;  global Press;  global ANTIONE_A;  global ANTIONE_B;  global PR_Ar;  global PR_Br;  ##1. compute average temp  AvgC = 0;  Press = 0;	  for ii = 1:MAX_SUB    AvgC += ((vapor_mass(ii) * SPECIFICC_GAS(ii)) + ((mass(ii) - vapor_mass(ii)) * SPECIFICC_GAS(ii)));  endfor  if GetMass() > 0;    AvgC = AvgC / total_mass;    Temp = Q / AvgC / total_mass;  else    Temp = 0;  endif
  [A, B] = GetPRCoeffAll()  [x1, x2, x3, ThreeRoots] = SolveCubic(-(1-B),(A-3*B^2-2*B),(-A*B+B^2+B^3))    if(ThreeRoots)    #Mixture is either Liquid, VLE, or Vapor    Zl = x1+(1-B)/3;    Zv = x3+(1-B)/3;    Vl = Zl*R_CONST*Temp/GetVapPress(1)    Vv = Zv*R_CONST*Temp/GetVapPress(1)    for ii = 1:MAX_SUB    endfor  else    #Mixture is supercritical    ThreeRoots  endif     ##  for ii = 1:1##    [A, B] = GetPRCoeff(ii);##    [x1, x2, x3] = SolveCubic(-(1-B),(A-3*B^2-2*B),(-A*B+B^2+B^3));##    (x1*R_CONST*Temp)/GetVapPress(1)##  endfor    endfunction